
(title1){ALGOVOX}

A constructed language by Jack Eisenmann

This page was generated from (!link){https://github.com/ostracod/algovox} at (!const){timestamp}.

(title2){DESIGN FEATURES}

Algovox is a constructed language for communication between humans, but borrows elements of computer programming languages. In particular, Algovox follows the imperative programming paradigm, and includes the following features:

> Mutable variable declaration
> Storage of nouns in arrays
> "If" statements for conditional evaluation
> Loops for iterative evaluation

Algovox is Turing-complete. With the correct sequence of statements, the speaker can express any Turing machine, using an array of nouns to represent an infinitely long tape.

Algovox has the following design goals:

> The grammar should prevent syntactic ambiguity.
> The semantics should be precise, especially pertaining to sets of nouns.
> The language should allow communication of complex ideas.
> The morphology should incorporate mnemonics into words to facilitate memorization.
> The lexicon should contain between 800 to 1000 words.

Depending on who you ask, Algovox may be considered to be a logical language ("loglang"). However, the design of Algovox is rooted more in software engineering than formal logic.

(title2){PHONOLOGY}

TODO: Write the rest of the documentation.


